{
    "esversion": 6,
    "es5":  true, // ECMAScript 5
    "browser": true, // Standard browser globals e.g. `window`, `document`.
    "sub": true, // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
    "bitwise": false, // true: Prohibit bitwise operators (&, |, ^, etc.) 
    "immed": false, // true: Require immediate invocations to be wrapped in parens e.g. 
    "latedef": false, // true: Require variables/functions to be defined before being used
    "newcap": false, // true: Require capitalization of all constructor functions e.g. `new F()`
    "noarg": true, // true: Prohibit use of `arguments.caller` and `arguments.callee`
    "plusplus": false, // true: Prohibit use of `++` & `--`
    "quotmark": false, // Quotation mark consistency
    "camelcase": false, // true: Identifiers must be in camelCase
    "forin": true, // true: Require filtering for..in loops with obj.hasOwnProperty()
    "indent": 4, // {int} Number of spaces to use for indentation
    "noempty": true, // true: Prohibit use of empty blocks
    "nonew": false, // true: Prohibit use of constructors for side-effects (without assignment)
    "maxparams": false, // {int} Max number of formal params allowed per function
    "maxdepth": false, // {int} Max depth of nested blocks (within functions)
    "maxstatements": false, // {int} Max number statements per function
    "maxcomplexity": false, // {int} Max cyclomatic complexity per function
    "maxlen": false, // {int} Max number of characters per line

    // Relaxing
    "asi": false, // true: Tolerate Automatic Semicolon Insertion (no semicolons)
    "boss": false, // true: Tolerate assignments where comparisons would be expected
    "debug": false, // true: Allow debugger statements e.g. browser breakpoints.
    "eqnull": false, // true: Tolerate use of `== null`
    "es5": false, // true: Allow ES5 syntax (ex: getters and setters)
    "esnext": false, // true: Allow ES.next (ES6) syntax (ex: `const`)
    "moz": false, // true: Allow Mozilla specific syntax (extends and overrides esnext features)
    // (ex: `for each`, multiple try/catch, function expressionâ€¦)
    "evil": false, // true: Tolerate use of `eval` and `new Function()`
    "expr": true, // true: Tolerate `ExpressionStatement` as Programs
    "funcscope": false, // true: Tolerate defining variables inside control statements"
    "globalstrict": true, // false: Allow global "use strict" (also enables 'strict')
    "iterator": false, // true: Tolerate using the `__iterator__` property
    "lastsemic": false, // true: Tolerate omitting a semicolon for the last statement of a 1-line block
    "laxbreak": false, // true: Tolerate possibly unsafe line breakings
    "laxcomma": false, // true: Tolerate comma-first style coding
    "loopfunc": false, // true: Tolerate functions being defined in loops
    "multistr": false, // true: Tolerate multi-line strings
    "proto": false, // true: Tolerate using the `__proto__` property
    "scripturl": false, // true: Tolerate script-targeted URLs
    "shadow": false, // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
    "sub": true, // true: Tolerate using `[]` notation when it can still be expressed in dot notation
    "supernew": false, // true: Tolerate `new function () { ... };` and `new Object;`

    "validthis": false, // true: Tolerate using this in a non-constructor function
    "strict": false, // true: Requires all functions run in ES5 Strict Mode
    "unused": false, // true: Require all defined variables be used


    "globals": {
        "jQuery": true,
        "$": true,
        "moment": true,
        "pjax_config_page": true,
        "page": true,
        "text":  true,
        "get_user_country": true
    }

    // TODO: Options to enable later:
    // "curly": true, // true: Require {} for every new block or scope
    // "eqeqeq": true, // true: Require triple equals (===) for comparison
    // "undef": true, // true: Require all non-global variables to be declared (prevents global leaks)
}
